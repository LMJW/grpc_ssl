# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bfawstest.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='bfawstest.proto',
  package='awstest',
  syntax='proto3',
  serialized_pb=_b('\n\x0f\x62\x66\x61wstest.proto\x12\x07\x61wstest\"%\n\nawsrequest\x12\x17\n\x0ftesttextmessage\x18\x01 \x01(\t\"R\n\x0b\x61wsresponse\x12\x13\n\x0bresponsemsg\x18\x01 \x01(\t\x12.\n\x0c\x63ountertimer\x18\x02 \x03(\x0b\x32\x18.awstest.COUNTERANDTIMER\"S\n\x0f\x43OUNTERANDTIMER\x12\x16\n\x0eorderofrequest\x18\x01 \x01(\x05\x12\x13\n\x0brequesttime\x18\x02 \x01(\t\x12\x13\n\x0brequestinfo\x18\x03 \x01(\t2L\n\x0eTestAWSService\x12:\n\x0bGetdatabase\x12\x13.awstest.awsrequest\x1a\x14.awstest.awsresponse\"\x00\x62\x06proto3')
)




_AWSREQUEST = _descriptor.Descriptor(
  name='awsrequest',
  full_name='awstest.awsrequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='testtextmessage', full_name='awstest.awsrequest.testtextmessage', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=65,
)


_AWSRESPONSE = _descriptor.Descriptor(
  name='awsresponse',
  full_name='awstest.awsresponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='responsemsg', full_name='awstest.awsresponse.responsemsg', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='countertimer', full_name='awstest.awsresponse.countertimer', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=67,
  serialized_end=149,
)


_COUNTERANDTIMER = _descriptor.Descriptor(
  name='COUNTERANDTIMER',
  full_name='awstest.COUNTERANDTIMER',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='orderofrequest', full_name='awstest.COUNTERANDTIMER.orderofrequest', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='requesttime', full_name='awstest.COUNTERANDTIMER.requesttime', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='requestinfo', full_name='awstest.COUNTERANDTIMER.requestinfo', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=151,
  serialized_end=234,
)

_AWSRESPONSE.fields_by_name['countertimer'].message_type = _COUNTERANDTIMER
DESCRIPTOR.message_types_by_name['awsrequest'] = _AWSREQUEST
DESCRIPTOR.message_types_by_name['awsresponse'] = _AWSRESPONSE
DESCRIPTOR.message_types_by_name['COUNTERANDTIMER'] = _COUNTERANDTIMER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

awsrequest = _reflection.GeneratedProtocolMessageType('awsrequest', (_message.Message,), dict(
  DESCRIPTOR = _AWSREQUEST,
  __module__ = 'bfawstest_pb2'
  # @@protoc_insertion_point(class_scope:awstest.awsrequest)
  ))
_sym_db.RegisterMessage(awsrequest)

awsresponse = _reflection.GeneratedProtocolMessageType('awsresponse', (_message.Message,), dict(
  DESCRIPTOR = _AWSRESPONSE,
  __module__ = 'bfawstest_pb2'
  # @@protoc_insertion_point(class_scope:awstest.awsresponse)
  ))
_sym_db.RegisterMessage(awsresponse)

COUNTERANDTIMER = _reflection.GeneratedProtocolMessageType('COUNTERANDTIMER', (_message.Message,), dict(
  DESCRIPTOR = _COUNTERANDTIMER,
  __module__ = 'bfawstest_pb2'
  # @@protoc_insertion_point(class_scope:awstest.COUNTERANDTIMER)
  ))
_sym_db.RegisterMessage(COUNTERANDTIMER)



_TESTAWSSERVICE = _descriptor.ServiceDescriptor(
  name='TestAWSService',
  full_name='awstest.TestAWSService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=236,
  serialized_end=312,
  methods=[
  _descriptor.MethodDescriptor(
    name='Getdatabase',
    full_name='awstest.TestAWSService.Getdatabase',
    index=0,
    containing_service=None,
    input_type=_AWSREQUEST,
    output_type=_AWSRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TESTAWSSERVICE)

DESCRIPTOR.services_by_name['TestAWSService'] = _TESTAWSSERVICE

# @@protoc_insertion_point(module_scope)
